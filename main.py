import asyncio
import os
from aiogram import Bot, Dispatcher
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.fsm.context import FSMContext
import logging
from tinkoff_payment import init_payment

# –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
try:
    from dotenv import load_dotenv

    load_dotenv()
except ImportError:
    print("‚ö†Ô∏è python-dotenv –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞–ø—Ä—è–º—É—é.")

from yandex_gpt_client import YandexGPTClient
from knowledge_base import get_context_prompt
from google_sheet_client import GoogleSheetsClient
from booking_handler import BookingHandler, BookingCallback, BookingStates

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –¢–æ–∫–µ–Ω—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–ª—É—á—à–µ –≤—ã–Ω–µ—Å—Ç–∏ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è)
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
YANDEX_API_KEY = os.getenv('YANDEX_API_KEY')
YANDEX_FOLDER_ID = os.getenv('YANDEX_FOLDER_ID')
GOOGLE_CREDENTIALS_FILE = os.getenv('GOOGLE_CREDENTIALS_FILE')
GOOGLE_SPREADSHEET_ID = os.getenv('GOOGLE_SPREADSHEET_ID')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–π
storage = MemoryStorage()
bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher(storage=storage)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤
yandex_gpt = YandexGPTClient(YANDEX_API_KEY, YANDEX_FOLDER_ID)
sheets_client = GoogleSheetsClient(GOOGLE_CREDENTIALS_FILE, GOOGLE_SPREADSHEET_ID)
booking_handler = BookingHandler(sheets_client)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
active_requests = set()


@dp.message(Command("start"))
async def cmd_start(message: Message):
    welcome_text = """
üèÇ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ChebEXTREME!

–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≤ –∞—Ä–µ–Ω–¥—É —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ –∏ –æ—Ä–≥–∞–Ω–∏–∑—É–µ–º —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:
‚Ä¢ –°–Ω–æ—É–±–æ—Ä–¥—ã –∏ –≥–æ—Ä–Ω—ã–µ –ª—ã–∂–∏
‚Ä¢ –í–µ–ª–æ—Å–∏–ø–µ–¥—ã
‚Ä¢ –≠–ª–µ–∫—Ç—Ä–æ—Å–∞–º–æ–∫–∞—Ç—ã
‚Ä¢ SUP-–±–æ—Ä–¥—ã
‚Ä¢ –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ
‚Ä¢ –°–ø–ª–∞–≤—ã –∏ –ø–æ—Ö–æ–¥—ã

–ö–æ–º–∞–Ω–¥—ã:
/start - üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
/booking - üéØ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
/mybookings - üìã –ú–æ–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
/prices - üí∞ –¶–µ–Ω—ã –Ω–∞ –ø—Ä–æ–∫–∞—Ç
/contact - üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏
/help - üÜò –ü–æ–º–æ—â—å

–ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π—Ç–µ –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö, —Ü–µ–Ω–∞—Ö –∏–ª–∏ —É—Å–ª–æ–≤–∏—è—Ö –∞—Ä–µ–Ω–¥—ã! üèïÔ∏è
"""
    await message.answer(welcome_text)


@dp.message(Command("help"))
async def cmd_help(message: Message):
    help_text = """
üÜò –ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞ ChebEXTREME

**–ö–æ–º–∞–Ω–¥—ã:**
/start - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
/booking - –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
/mybookings - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
/prices - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ü–µ–Ω—ã –Ω–∞ –ø—Ä–æ–∫–∞—Ç
/contact - –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã
/help - –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ

**–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π:**
‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞
‚Ä¢ –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ
‚Ä¢ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
‚Ä¢ –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –æ–ø–ª–∞—Ç—ã

**–í–æ–ø—Ä–æ—Å—ã –ø–æ –ø—Ä–æ–∫–∞—Ç—É:**
–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –Ω–∞–ø—Ä–∏–º–µ—Ä:
‚Ä¢ "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –ø—Ä–æ–∫–∞—Ç –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞ –Ω–∞ –¥–µ–Ω—å?"
‚Ä¢ "–ö–∞–∫–∏–µ —É—Å–ª–æ–≤–∏—è –∞—Ä–µ–Ω–¥—ã SUP-–±–æ—Ä–¥–∞?"
‚Ä¢ "–ï—Å—Ç—å –ª–∏ —Å–∫–∏–¥–∫–∏ –Ω–∞ –¥–ª–∏—Ç–µ–ª—å–Ω—É—é –∞—Ä–µ–Ω–¥—É?"
"""
    await message.answer(help_text)


@dp.message(Command("booking"))
async def cmd_booking(message: Message, state: FSMContext):
    """–ö–æ–º–∞–Ω–¥–∞ –Ω–∞—á–∞–ª–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"""
    await booking_handler.start_booking(message, state)


@dp.message(Command("mybookings"))
async def cmd_my_bookings(message: Message):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = message.from_user.id
    bookings = sheets_client.get_user_bookings(user_id)

    if not bookings:
        await message.answer(
            "üìã –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π.\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /booking –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è."
        )
        return

    text = "üìã **–í–ê–®–ò –ë–†–û–ù–ò–†–û–í–ê–ù–ò–Ø:**\n\n"

    for i, booking in enumerate(bookings, 1):
        text += f"**{i}. {booking.get('–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}**\n"
        text += f"üí∞ {booking.get('–°—Ç–æ–∏–º–æ—Å—Ç—å', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')} ‚ÇΩ\n"
        text += f"üìÖ {booking.get('–î–∞—Ç–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        text += f"üí≥ {booking.get('–°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        text += "---\n"

    text += "\nüìû –í–æ–ø—Ä–æ—Å—ã –ø–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—é: @chebextreme"

    await message.answer(text, parse_mode="Markdown")


@dp.message(Command("prices"))
async def cmd_prices(message: Message):
    prices_text = """
üí∞ –ê–ö–¢–£–ê–õ–¨–ù–´–ï –¶–ï–ù–´ ChebEXTREME

üö¥‚Äç‚ôÇÔ∏è **–í–ï–õ–û–°–ò–ü–ï–î–´:**
–ö–∞—Ç–µ–≥–æ—Ä–∏—è ¬´–°¬ª: 200‚ÇΩ/—á, 500‚ÇΩ/3—á, 900‚ÇΩ/—Å—É—Ç–∫–∏
–ö–∞—Ç–µ–≥–æ—Ä–∏—è ¬´–í¬ª: 250‚ÇΩ/—á, 700‚ÇΩ/3—á, 1300‚ÇΩ/—Å—É—Ç–∫–∏  
–ö–∞—Ç–µ–≥–æ—Ä–∏—è ¬´–ê¬ª: 300‚ÇΩ/—á, 900‚ÇΩ/3—á, 2000‚ÇΩ/—Å—É—Ç–∫–∏

üõ¥ **–°–ê–ú–û–ö–ê–¢–´:** 350‚ÇΩ/—á, 700‚ÇΩ/3—á, 1500‚ÇΩ/—Å—É—Ç–∫–∏

üèÑ‚Äç‚ôÇÔ∏è **SUP-–ë–û–†–î–´:**
–ü–Ω-–ß—Ç: 1000‚ÇΩ/—Å—É—Ç–∫–∏
–ü—Ç-–í—Å: 1500‚ÇΩ/—Å—É—Ç–∫–∏

üèïÔ∏è **–¢–£–†–ò–°–¢–ò–ß–ï–°–ö–û–ï –°–ù–ê–†–Ø–ñ–ï–ù–ò–ï:**
–ü–∞–ª–∞—Ç–∫–∏: –æ—Ç 200‚ÇΩ/—Å—É—Ç–∫–∏
–°–ø–∞–ª—å–Ω–∏–∫–∏: –æ—Ç 200‚ÇΩ/—Å—É—Ç–∫–∏
–®–∞—Ç–µ—Ä—ã: –æ—Ç 1200‚ÇΩ/—Å—É—Ç–∫–∏

üéØ **–ú–ï–†–û–ü–†–ò–Ø–¢–ò–Ø:**
–°–ø–ª–∞–≤—ã –ø–æ —Ä–µ–∫–∞–º: –æ—Ç 15000‚ÇΩ
–ü–æ—Ö–æ–¥—ã: –æ—Ç 10000‚ÇΩ
–í–µ–ª–æ—Ç—É—Ä—ã: –æ—Ç 8000‚ÇΩ

üìû –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: /contact –∏–ª–∏ /booking
"""
    await message.answer(prices_text, parse_mode="Markdown")


@dp.message(Command("contact"))
async def cmd_contact(message: Message):
    contact_text = """
üìû **–ö–û–ù–¢–ê–ö–¢–´ ChebEXTREME**

üåê **–°–∞–π—Ç:** www.chebextreme.ru
üì± **–í–ö–æ–Ω—Ç–∞–∫—Ç–µ:** https://vk.com/chebextremebike
üìç **–ì–æ—Ä–æ–¥:** –ß–µ–±–æ–∫—Å–∞—Ä—ã
üìû **–¢–µ–ª–µ—Ñ–æ–Ω:** +7 927 669 19 52
‚úâÔ∏è **Telegram:** @chebextreme

**–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:**
–ü–Ω-–ü—Ç: 10:00-19:00
–°–±-–í—Å: 10:00-18:00

–ü–∏—à–∏—Ç–µ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è - –º—ã –æ—Ç–≤–µ—Ç–∏–º! üèïÔ∏è
"""
    await message.answer(contact_text, parse_mode="Markdown")


@dp.message(Command("test_payment"))
async def cmd_test_payment(message: Message):
    """–¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂"""
    try:
        payment_url = init_payment(
            amount=100,  # 100 —Ä—É–±–ª–µ–π
            description="–¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂",
            customer_id=str(message.from_user.id),
            chat_id=message.from_user.id
        )
        
        await message.answer(
            "üí≥ –¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω\n\n"
            f"üîó [–û–ø–ª–∞—Ç–∏—Ç—å 100 ‚ÇΩ]({payment_url})",
            parse_mode="Markdown",
            disable_web_page_preview=False
        )
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback'–æ–≤ –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
@dp.callback_query(BookingCallback.filter())
async def handle_booking_callback(callback: CallbackQuery, callback_data: BookingCallback, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback'–æ–≤ —Å–∏—Å—Ç–µ–º—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"""
    action = callback_data.action

    if action == "select":
        await booking_handler.handle_event_selection(callback, callback_data, state)
    elif action == "start_form":
        await booking_handler.start_form(callback, state)
    elif action == "confirm":
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        booking_data = await state.get_data()
        
        try:
            # –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂ –≤ Tinkoff
            payment_url = init_payment(
                amount=int(booking_data.get('amount', 100)),
                 description=f"–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ {booking_data.get('event_name') or '—É—Å–ª—É–≥–∏'}",
                customer_id=str(callback.from_user.id),
                chat_id=callback.from_user.id
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å—Å—ã–ª–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É
            await callback.message.answer(
                "üí≥ –î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–ª–∞—Ç–∏—Ç–µ –∑–∞–∫–∞–∑:\n\n"
                f"üéØ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ: {booking_data.get('event_name')}\n"
                f"üí∞ –°—É–º–º–∞: {booking_data.get('amount')} ‚ÇΩ\n\n"
                f"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É: {payment_url}\n\n"
                "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤ —ç—Ç–æ–º —á–∞—Ç–µ.",
                parse_mode="Markdown"
            )
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
            await booking_handler.confirm_booking(callback, state)
            
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞: {e}")
            await callback.message.answer(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞. "
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π."
            )
            
    elif action == "cancel":
        await booking_handler.cancel_booking(callback, state)
    elif action == "back":
        await booking_handler.start_booking(callback.message, state)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
@dp.message(BookingStates.waiting_for_full_name)
async def process_full_name(message: Message, state: FSMContext):
    await booking_handler.process_full_name(message, state)


@dp.message(BookingStates.waiting_for_phone)
async def process_phone(message: Message, state: FSMContext):
    await booking_handler.process_phone(message, state)


@dp.message(BookingStates.waiting_for_passport_series)
async def process_passport_series(message: Message, state: FSMContext):
    await booking_handler.process_passport_series(message, state)


@dp.message(BookingStates.waiting_for_passport_number)
async def process_passport_number(message: Message, state: FSMContext):
    await booking_handler.process_passport_number(message, state)


@dp.message(BookingStates.waiting_for_birth_date)
async def process_birth_date(message: Message, state: FSMContext):
    await booking_handler.process_birth_date(message, state)


@dp.message()
async def handle_message(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–≤–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    current_state = await state.get_state()
    if current_state:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è, –Ω–æ –ø—Ä–∏—Å–ª–∞–ª –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.answer(
            "üìù –í—ã —Å–µ–π—á–∞—Å –∑–∞–ø–æ–ª–Ω—è–µ—Ç–µ —Ñ–æ—Ä–º—É –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.\n\n"
            "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start\n"
            "–ò–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã."
        )
        return

    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–ø—Ä–æ—Å –æ—Ç —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id in active_requests:
        await message.answer("‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∑–∞–ø—Ä–æ—Å, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...")
        return

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    active_requests.add(user_id)

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        processing_msg = await message.answer("ü§ñ –ò—â—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...")

        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç YandexGPT
        context_prompt = get_context_prompt(message.text)
        response = await yandex_gpt.get_response(context_prompt)

        if response:
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
            await processing_msg.delete()

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∫ –æ—Ç–≤–µ—Ç–∞–º –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö
            if any(word in message.text.lower() for word in ['—Å–ø–ª–∞–≤', '–ø–æ—Ö–æ–¥', '–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ', '—Ç—É—Ä', '—é—Ä—é–∑–∞–Ω—å']):
                response += "\n\nüéØ –•–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–µ—Å—Ç–æ? –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /booking"

            await message.answer(response)
        else:
            await processing_msg.edit_text(
                "üòÖ –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —Å–º–æ–≥ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏. "
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é!\n\n"
                "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã: /contact"
            )

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await message.answer(
            "üòÖ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. "
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é!\n\n"
            "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã: /contact"
        )

    finally:
        # –£–±–∏—Ä–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        active_requests.discard(user_id)


async def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    logging.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ChebEXTREME...")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω—ã
    if TELEGRAM_TOKEN == '–≤–∞—à_—Ç–µ–ª–µ–≥—Ä–∞–º_—Ç–æ–∫–µ–Ω':
        logging.error("‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω TELEGRAM_TOKEN!")
        return

    if YANDEX_API_KEY == '–≤–∞—à_yandex_api_key':
        logging.error("‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω YANDEX_API_KEY!")
        return

    if YANDEX_FOLDER_ID == '–≤–∞—à_yandex_folder_id':
        logging.error("‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω YANDEX_FOLDER_ID!")
        return

    if GOOGLE_SPREADSHEET_ID == '–≤–∞—à_spreadsheet_id':
        logging.error("‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω GOOGLE_SPREADSHEET_ID!")
        return

    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º YandexGPT
        await yandex_gpt.initialize()
        logging.info("‚úÖ YandexGPT –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Google Sheets
        await sheets_client.initialize()
        logging.info("‚úÖ Google Sheets –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")

        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        logging.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        await dp.start_polling(bot)

    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")

    finally:
        await yandex_gpt.close()
        await bot.session.close()


if __name__ == "__main__":
    asyncio.run(main())
    