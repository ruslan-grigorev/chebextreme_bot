import asyncio
import os
from aiogram import Bot, Dispatcher
from aiogram.types import Message
from aiogram.filters import Command
import logging

# –ó–∞–≥—Ä—É–∑–∫–∞ .env
try:
    from dotenv import load_dotenv
    load_dotenv()
except ImportError:
    print("‚ö†Ô∏è python-dotenv –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞–ø—Ä—è–º—É—é.")

from yandex_gpt_client import YandexGPTClient
from knowledge_base import get_context_prompt

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –¢–æ–∫–µ–Ω—ã
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
YANDEX_API_KEY = os.getenv('YANDEX_API_KEY')
YANDEX_FOLDER_ID = os.getenv('YANDEX_FOLDER_ID')

bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher()
yandex_gpt = YandexGPTClient(YANDEX_API_KEY, YANDEX_FOLDER_ID)

active_requests = set()


@dp.message(Command("start"))
async def cmd_start(message: Message):
    welcome_text = """
üèÇ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ChebEXTREME!

–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≤ –∞—Ä–µ–Ω–¥—É —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ:
‚Ä¢ –°–Ω–æ—É–±–æ—Ä–¥—ã –∏ –≥–æ—Ä–Ω—ã–µ –ª—ã–∂–∏
‚Ä¢ –í–µ–ª–æ—Å–∏–ø–µ–¥—ã –∏ —ç–ª–µ–∫—Ç—Ä–æ—Å–∞–º–æ–∫–∞—Ç—ã  
‚Ä¢ SUP-–±–æ—Ä–¥—ã, –∫–∞—Ç–∞–º–∞—Ä–∞–Ω—ã
‚Ä¢ –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ

–ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ —Ü–µ–Ω–∞—Ö –∏–ª–∏ —É—Å–ª–æ–≤–∏—è—Ö –∞—Ä–µ–Ω–¥—ã, –∏ —è –ø–æ–º–æ–≥—É! üèïÔ∏è
"""
    await message.answer(welcome_text)


@dp.message(Command("help"))
async def cmd_help(message: Message):
    help_text = """
üÜò –ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞ ChebEXTREME

–ö–æ–º–∞–Ω–¥—ã:
/start - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
/help - –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
/prices - –ü–æ–∫–∞–∑–∞—Ç—å —Ü–µ–Ω—ã
/contact - –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã

–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:
‚Ä¢ –°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç —Å–∞–ø–±–æ—Ä–¥ –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ?
‚Ä¢ –ö–∞–∫–∏–µ —É—Å–ª–æ–≤–∏—è –∞—Ä–µ–Ω–¥—ã –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞?
‚Ä¢ –ö–∞–∫–∏–µ –ø–∞–ª–∞—Ç–∫–∏ –µ—Å—Ç—å?
"""
    await message.answer(help_text)


@dp.message(Command("prices"))
async def cmd_prices(message: Message):
    prices_text = """
üí∞ –ê–ö–¢–£–ê–õ–¨–ù–´–ï –¶–ï–ù–´ ChebEXTREME

üö¥‚Äç‚ôÇÔ∏è –í–ï–õ–û–°–ò–ü–ï–î–´:
–ö–∞—Ç–µ–≥–æ—Ä–∏—è ¬´–°¬ª: 200‚ÇΩ/—á, 500‚ÇΩ/3—á, 900‚ÇΩ/—Å—É—Ç–∫–∏
–ö–∞—Ç–µ–≥–æ—Ä–∏—è ¬´–í¬ª: 250‚ÇΩ/—á, 700‚ÇΩ/3—á, 1300‚ÇΩ/—Å—É—Ç–∫–∏  
–ö–∞—Ç–µ–≥–æ—Ä–∏—è ¬´–ê¬ª: 300‚ÇΩ/—á, 900‚ÇΩ/3—á, 2000‚ÇΩ/—Å—É—Ç–∫–∏

üõ¥ –≠–õ–ï–ö–¢–†–û–°–ê–ú–û–ö–ê–¢–´: 350‚ÇΩ/—á, 700‚ÇΩ/3—á, 1500‚ÇΩ/—Å—É—Ç–∫–∏

üèÑ‚Äç‚ôÇÔ∏è SUP-–ë–û–†–î–´:
–ü–Ω‚Äì–ß—Ç: 1000‚ÇΩ/—Å—É—Ç–∫–∏  
–ü—Ç‚Äì–í—Å: 1500‚ÇΩ/—Å—É—Ç–∫–∏ (2-–µ —Å—É—Ç–∫–∏ -500‚ÇΩ)

üèïÔ∏è –¢–£–†–ò–°–¢–ò–ß–ï–°–ö–û–ï –°–ù–ê–†–Ø–ñ–ï–ù–ò–ï:
–ü–∞–ª–∞—Ç–∫–∏: –æ—Ç 200‚ÇΩ, –°–ø–∞–ª—å–Ω–∏–∫–∏: –æ—Ç 200‚ÇΩ, –®–∞—Ç—Ä—ã: –æ—Ç 1200‚ÇΩ

üìû –ü–æ–¥—Ä–æ–±–Ω–µ–µ ‚Äî /contact
"""
    await message.answer(prices_text)


@dp.message(Command("contact"))
async def cmd_contact(message: Message):
    contact_text = """
üìû –ö–û–ù–¢–ê–ö–¢–´ ChebEXTREME

üåê –°–∞–π—Ç: www.chebextreme.ru
üì± Telegram: @chebextreme
üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 927 669 19 52
üìç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ: https://vk.com/chebextremebike
üìç –ì–æ—Ä–æ–¥: –ß–µ–±–æ–∫—Å–∞—Ä—ã
"""
    await message.answer(contact_text)


@dp.message()
async def handle_message(message: Message):
    user_id = message.from_user.id

    if user_id in active_requests:
        await message.answer("‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ. –Ø –µ—â—ë –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∑–∞–ø—Ä–æ—Å...")
        return

    active_requests.add(user_id)

    try:
        processing_msg = await message.answer("ü§ñ –ò—â—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π ChebEXTREME...")

        # –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –ø—Ä–æ–º–ø—Ç
        context_prompt = get_context_prompt(message.text)

        # –ü–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç YandexGPT
        response = await yandex_gpt.get_response(context_prompt)

        if response:
            await processing_msg.delete()
            await message.answer(response.strip())
        else:
            await processing_msg.edit_text(
                "ü§∑ –Ø –Ω–µ –Ω–∞—à—ë–ª —Ç–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –±–∞–∑–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –Ω–∞–ø—Ä—è–º—É—é:\n\nüì± /contact"
            )

    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –ò–ò. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏: /contact")

    finally:
        active_requests.discard(user_id)


async def main():
    logging.info("‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ ChebEXTREME Bot...")

    if not TELEGRAM_TOKEN or TELEGRAM_TOKEN == '–≤–∞—à_—Ç–µ–ª–µ–≥—Ä–∞–º_—Ç–æ–∫–µ–Ω':
        logging.error("‚ùå TELEGRAM_TOKEN –Ω–µ –∑–∞–¥–∞–Ω")
        return
    if not YANDEX_API_KEY or YANDEX_API_KEY == '–≤–∞—à_yandex_api_key':
        logging.error("‚ùå YANDEX_API_KEY –Ω–µ –∑–∞–¥–∞–Ω")
        return
    if not YANDEX_FOLDER_ID or YANDEX_FOLDER_ID == '–≤–∞—à_yandex_folder_id':
        logging.error("‚ùå YANDEX_FOLDER_ID –Ω–µ –∑–∞–¥–∞–Ω")
        return

    try:
        await yandex_gpt.initialize()
        logging.info("‚úÖ YandexGPT –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

        await dp.start_polling(bot)

    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")

    finally:
        await yandex_gpt.close()
        await bot.session.close()


if __name__ == "__main__":
    asyncio.run(main())
